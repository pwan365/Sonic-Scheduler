digraph "Random_Nodes_10_Density_4.50_CCR_9.97_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=10,
		"Pruned using list schedule length"=1,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-4",
		"Time to schedule (ms)"=93,
		"Total idle time"=0,
		"Total schedule length"=67,
		"Total sequential time"=67,
		"Total states created"=2
	];
	0	["Finish time"=7,
		Processor=0,
		"Start time"=0,
		Weight=7];
	1	["Finish time"=13,
		Processor=0,
		"Start time"=7,
		Weight=6];
	0 -> 1	[Weight=8];
	2	["Finish time"=18,
		Processor=0,
		"Start time"=13,
		Weight=5];
	0 -> 2	[Weight=14];
	3	["Finish time"=28,
		Processor=0,
		"Start time"=18,
		Weight=10];
	0 -> 3	[Weight=8];
	4	["Finish time"=35,
		Processor=0,
		"Start time"=28,
		Weight=7];
	0 -> 4	[Weight=28];
	5	["Finish time"=45,
		Processor=0,
		"Start time"=35,
		Weight=10];
	0 -> 5	[Weight=8];
	6	["Finish time"=52,
		Processor=0,
		"Start time"=45,
		Weight=7];
	0 -> 6	[Weight=17];
	7	["Finish time"=56,
		Processor=0,
		"Start time"=52,
		Weight=4];
	0 -> 7	[Weight=14];
	8	["Finish time"=64,
		Processor=0,
		"Start time"=56,
		Weight=8];
	0 -> 8	[Weight=28];
	9	["Finish time"=67,
		Processor=0,
		"Start time"=64,
		Weight=3];
	0 -> 9	[Weight=6];
	1 -> 2	[Weight=25];
	1 -> 3	[Weight=6];
	1 -> 4	[Weight=11];
	1 -> 5	[Weight=11];
	1 -> 6	[Weight=19];
	1 -> 7	[Weight=8];
	1 -> 8	[Weight=28];
	1 -> 9	[Weight=22];
	2 -> 3	[Weight=11];
	2 -> 4	[Weight=14];
	2 -> 5	[Weight=8];
	2 -> 6	[Weight=8];
	2 -> 7	[Weight=14];
	2 -> 8	[Weight=28];
	2 -> 9	[Weight=19];
	3 -> 4	[Weight=19];
	3 -> 5	[Weight=6];
	3 -> 6	[Weight=22];
	3 -> 7	[Weight=6];
	3 -> 8	[Weight=6];
	3 -> 9	[Weight=22];
	4 -> 5	[Weight=6];
	4 -> 6	[Weight=8];
	4 -> 7	[Weight=11];
	4 -> 8	[Weight=28];
	4 -> 9	[Weight=14];
	5 -> 6	[Weight=22];
	5 -> 7	[Weight=19];
	5 -> 8	[Weight=19];
	5 -> 9	[Weight=8];
	6 -> 7	[Weight=22];
	6 -> 8	[Weight=14];
	6 -> 9	[Weight=6];
	7 -> 8	[Weight=22];
	7 -> 9	[Weight=14];
	8 -> 9	[Weight=11];
}
